y = NULL, x = "Total gifts")
top_school
gifts_top_state <- gifts_clean %>%
select(State, amount) %>%
group_by(State) %>%
filter(!is.na(State)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(State = str_to_title(State)) %>%
mutate(order = row_number()) %>%
filter(order <= 15)
topstate <- ggplot(data = gifts_top_state,
mapping = aes(y = order, x = total)) +
geom_pointrange(aes(xmin = 0, xmax = total),
fatten = 4, size = 1.5, color = "#2c7fb8") +
scale_x_continuous(labels = label_comma()) +
scale_y_continuous(breaks = gifts_top$order,
labels = gifts_top$State) +
theme_minimal() +
guides(color = "none") +
labs(y = NULL, x = "Total gifts")
top15
gifts_world <- gifts_clean %>%
select(Attribution_Country, amount) %>%
group_by(Attribution_Country) %>%
filter(!is.na(Attribution_Country)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(code = countrycode(Attribution_Country, origin = 'country.name', destination = 'iso3c'))
world_gifts_map <- world %>%
left_join(gifts_world, by = c("ISO_A3" = "code"))
gifts_world_mapped <- ggplot() +
geom_sf(data = world_gifts_map, aes(fill = total)) +
labs(x = NULL, y = NULL,
title = "Total gifts from foreign governments by country") +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(face = "bold")) +
theme_minimal() +
scale_fill_gradient(low = "#edf8b1",
high = "#2c7fb8",
name = "",
labels = label_dollar())
gifts_world_mapped
ggsave("output/gifts_state.pdf", gifts_state,
width = 8, height = 5, units = "in", device = cairo_pdf)
ggsave("output/giftsyear.pdf", giftsyear,
width = 8, height = 5, units = "in", device = cairo_pdf)
ggsave("output/top15.pdf", top15,
width = 8, height = 5, units = "in", device = cairo_pdf)
ggsave("output/top_school.pdf", top_school,
width = 8, height = 5, units = "in", device = cairo_pdf)
View(world_gifts_map)
View(gifts_world)
View(gifts_clean)
library(tidyverse)
library(sf)
library(scales)
library(tigris)
library(countrycode)
foreign_gifts <-read_csv("data/foreign-gifts.csv")
states <- read_sf("data/states/cb_2018_us_state_20m.shp")
world <- read_sf("data/world/ne_110m_admin_0_countries.shp")
gifts_clean <- foreign_gifts %>%
mutate(Scool_name = str_to_title(School_name)) %>%
mutate(Receipt_Date = mdy(Receipt_Date)) %>%
mutate(year = year(Receipt_Date)) %>%
filter(!is.na(year)) %>%
filter(year <= 2023) %>%
mutate(year = as.factor(year)) %>%
mutate(amount = parse_number(Amount))
states_gifts <- gifts_clean %>%
select(State, amount) %>%
group_by(State) %>%
filter(!is.na(State)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount))
states_map <- states %>%
shift_geometry(position = "below") %>%
left_join(states_gifts, by = c("STUSPS" = "State"))
gifts_state <- ggplot() +
geom_sf(data = states_map, aes(fill = total)) +
labs(x = NULL, y = NULL) +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(face = "bold")) +
theme_minimal() +
scale_fill_gradient(low = "#edf8b1",
high = "#2c7fb8",
name = "",
labels = label_dollar())
gifts_state
gifts_time <- gifts_clean %>%
select(amount, year) %>%
filter(!is.na(amount))
giftsyear <- ggplot(gifts_time, aes(x = year, y = amount)) +
geom_point(alpha = 0.5, color = "#2c7fb8", size = 1, position = "jitter") +
theme_minimal() +
scale_y_continuous(labels = label_dollar()) +
theme(axis.text.x = element_text(angle = 90, hjust = 0.5, vjust = 0.5))
giftsyear
gifts_top <- gifts_clean %>%
select(Attribution_Country, amount) %>%
group_by(Attribution_Country) %>%
filter(!is.na(Attribution_Country)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(Attribution_Country = str_to_title(Attribution_Country)) %>%
mutate(order = row_number()) %>%
filter(order <= 15)
top15 <- ggplot(data = gifts_top,
mapping = aes(y = order, x = total)) +
geom_pointrange(aes(xmin = 0, xmax = total),
fatten = 4, size = 1.5, color = "#2c7fb8") +
scale_x_continuous(labels = label_comma()) +
scale_y_continuous(breaks = gifts_top$order,
labels = gifts_top$Attribution_Country) +
theme_minimal() +
guides(color = "none") +
labs(y = NULL, x = "Total gifts")
top15
gifts_school <- gifts_clean %>%
select(School_name, amount) %>%
group_by(School_name) %>%
filter(!is.na(School_name)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(School_name = str_to_title(School_name)) %>%
mutate(order = row_number()) %>%
gifts_school_top <-gifts_school
gifts_school <- gifts_clean %>%
select(School_name, amount) %>%
group_by(School_name) %>%
filter(!is.na(School_name)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(School_name = str_to_title(School_name)) %>%
mutate(order = row_number()) %>%
gifts_school_top <-gifts_school
gifts_school <- gifts_clean %>%
select(School_name, amount) %>%
group_by(School_name) %>%
filter(!is.na(School_name)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(School_name = str_to_title(School_name)) %>%
mutate(order = row_number())
gifts_school_top <- gifts_school %>%
filter(order <= 15)
View(gifts_school)
gifts_country <- gifts_clean %>%
select(Attribution_Country, amount) %>%
group_by(Attribution_Country) %>%
filter(!is.na(Attribution_Country)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(Attribution_Country = str_to_title(Attribution_Country)) %>%
mutate(order = row_number())
gifts_country_top <- gifts_country
filter(order <= 15)
gifts_country <- gifts_clean %>%
select(Attribution_Country, amount) %>%
group_by(Attribution_Country) %>%
filter(!is.na(Attribution_Country)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(Attribution_Country = str_to_title(Attribution_Country)) %>%
mutate(order = row_number())
gifts_country_top <- gifts_country %>%
filter(order <= 15)
top15 <- ggplot(data = gifts_country_top,
mapping = aes(y = order, x = total)) +
geom_pointrange(aes(xmin = 0, xmax = total),
fatten = 4, size = 1.5, color = "#2c7fb8") +
scale_x_continuous(labels = label_comma()) +
scale_y_continuous(breaks = gifts_top$order,
labels = gifts_top$Attribution_Country) +
theme_minimal() +
guides(color = "none") +
labs(y = NULL, x = "Total gifts")
top15
View(gifts_country)
View(states_gifts)
View(gifts_clean)
state <- gifts_clean %>%
filter(State == "MH")
View(state)
library(tidyverse)
library(sf)
library(scales)
library(tigris)
library(countrycode)
foreign_gifts <-read_csv("data/foreign-gifts.csv")
states <- read_sf("data/states/cb_2018_us_state_20m.shp")
world <- read_sf("data/world/ne_110m_admin_0_countries.shp")
gifts_clean <- foreign_gifts %>%
mutate(Scool_name = str_to_title(School_name)) %>%
mutate(Receipt_Date = mdy(Receipt_Date)) %>%
mutate(year = year(Receipt_Date)) %>%
filter(!is.na(year)) %>%
filter(year <= 2023) %>%
mutate(year = as.factor(year)) %>%
mutate(amount = parse_number(Amount))
states_gifts <- gifts_clean %>%
select(State, amount) %>%
group_by(State) %>%
filter(!is.na(State)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount))
states_map <- states %>%
shift_geometry(position = "below") %>%
left_join(states_gifts, by = c("STUSPS" = "State"))
gifts_state <- ggplot() +
geom_sf(data = states_map, aes(fill = total)) +
labs(x = NULL, y = NULL) +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(face = "bold")) +
theme_minimal() +
scale_fill_gradient(low = "#edf8b1",
high = "#2c7fb8",
name = "",
labels = label_dollar())
gifts_state
gifts_time <- gifts_clean %>%
select(amount, year) %>%
filter(!is.na(amount))
giftsyear <- ggplot(gifts_time, aes(x = year, y = amount)) +
geom_point(alpha = 0.5, color = "#2c7fb8", size = 1, position = "jitter") +
theme_minimal() +
scale_y_continuous(labels = label_dollar()) +
theme(axis.text.x = element_text(angle = 90, hjust = 0.5, vjust = 0.5))
giftsyear
gifts_country <- gifts_clean %>%
select(Attribution_Country, amount) %>%
group_by(Attribution_Country) %>%
filter(!is.na(Attribution_Country)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(Attribution_Country = str_to_title(Attribution_Country)) %>%
mutate(order = row_number())
gifts_country_top <- gifts_country %>%
filter(order <= 15)
top15 <- ggplot(data = gifts_country_top,
mapping = aes(y = order, x = total)) +
geom_pointrange(aes(xmin = 0, xmax = total),
fatten = 4, size = 1.5, color = "#2c7fb8") +
scale_x_continuous(labels = label_comma()) +
scale_y_continuous(breaks = gifts_top$order,
labels = gifts_top$Attribution_Country) +
theme_minimal() +
guides(color = "none") +
labs(y = NULL, x = "Total gifts")
topstate <- ggplot(data = gifts_top_state,
mapping = aes(y = order, x = total)) +
geom_pointrange(aes(xmin = 0, xmax = total),
fatten = 4, size = 1.5, color = "#2c7fb8") +
scale_x_continuous(labels = label_comma()) +
scale_y_continuous(breaks = gifts_top_state$order,
labels = gifts_top_state$State) +
theme_minimal() +
guides(color = "none") +
labs(y = NULL, x = "Total gifts")
gifts_world <- gifts_clean %>%
select(Attribution_Country, amount) %>%
group_by(Attribution_Country) %>%
filter(!is.na(Attribution_Country)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(code = countrycode(Attribution_Country, origin = 'country.name', destination = 'iso3c'))
world_gifts_map <- world %>%
left_join(gifts_world, by = c("ISO_A3" = "code"))
gifts_world_mapped <- ggplot() +
geom_sf(data = world_gifts_map, aes(fill = total)) +
labs(x = NULL, y = NULL,
title = "Total gifts from foreign governments by country") +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(face = "bold")) +
theme_minimal() +
scale_fill_gradient(low = "#edf8b1",
high = "#2c7fb8",
name = "",
labels = label_dollar())
gifts_world_mapped
gifts_top_state <- gifts_clean %>%
select(State, amount) %>%
group_by(State) %>%
filter(!is.na(State)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(State = str_to_title(State)) %>%
mutate(order = row_number()) %>%
filter(order <= 15)
topstate <- ggplot(data = gifts_top_state,
mapping = aes(y = order, x = total)) +
geom_pointrange(aes(xmin = 0, xmax = total),
fatten = 4, size = 1.5, color = "#2c7fb8") +
scale_x_continuous(labels = label_comma()) +
scale_y_continuous(breaks = gifts_top_state$order,
labels = gifts_top_state$State) +
theme_minimal() +
guides(color = "none") +
labs(y = NULL, x = "Total gifts")
top15
gifts_top_state <- gifts_clean %>%
select(State, amount) %>%
group_by(State) %>%
filter(!is.na(State)) %>%
filter(!is.na(amount)) %>%
summarise(total = sum(amount)) %>%
mutate(rank = rank(total)) %>%
arrange(desc(rank)) %>%
mutate(State = str_to_title(State)) %>%
mutate(order = row_number()) %>%
filter(order <= 15)
topstate <- ggplot(data = gifts_top_state,
mapping = aes(y = order, x = total)) +
geom_pointrange(aes(xmin = 0, xmax = total),
fatten = 4, size = 1.5, color = "#2c7fb8") +
scale_x_continuous(labels = label_comma()) +
scale_y_continuous(breaks = gifts_top_state$order,
labels = gifts_top_state$State) +
theme_minimal() +
guides(color = "none") +
labs(y = NULL, x = "Total gifts")
topstate
top15 <- ggplot(data = gifts_country_top,
mapping = aes(y = order, x = total)) +
geom_pointrange(aes(xmin = 0, xmax = total),
fatten = 4, size = 1.5, color = "#2c7fb8") +
scale_x_continuous(labels = label_comma()) +
scale_y_continuous(breaks = gifts_country_top$order,
labels = gifts_country_top$Attribution_Country) +
theme_minimal() +
guides(color = "none") +
labs(y = NULL, x = "Total gifts")
top15
Q1 <- (4, 5, 6, 3, 10, 7, 6, 7, 11)
Q1 <- c(4, 5, 6, 3, 10, 7, 6, 7, 11)
var(Q1)
sd(Q1)
rnorm(?)
?rnorm
Q5 <- rnorm(20, mean = 85, sd = 8)
Q5
Q5A <- Q5 + 1
Q5A
mean(Q5A)
sd(Q5A)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Modify the line below to set the directory to where you've stored the data files
setwd("~/exercise_files/1_2")
# Modify the line below to set the directory to where you've stored the data files
setwd("exercise_files/1_2")
# Load the data file
heating <- read_csv("heating.csv")
# Load the data file
heating <- read_csv("heating.csv")
# Load the tidyverse
library(tidyverse)
# Modify the line below to set the directory to where you've stored the data files
setwd("exercise_files/1_2")
# Load the data file
heating <- read_csv("heating.csv")
# Modify the line below to set the directory to where you've stored the data files
setwd("exercise_files/1_2")
# Load the data file
heating <- read_csv("heating.csv")
# Load the data file
heating <- read_csv("exercise_files/1_2/heating.csv")
# Tidy the data
heating <- heating %>%
gather(key="age", value="homes", -Source)
IA <- read.csv("data/itemanalysisdemo.csv")
library(tidyverse)
library(foreign)
library(itemanalysis)
library(irr)
library(ltm)
library(ltm)
View(IA)
cor(IA)
item.total(IA)
library(multilevel)
IA <- read.csv("data/itemanalysisdemo.csv")
library(multilevel)
item.total(IA)
library(multilevel)
item.total(IA)
library(multilevel)
item.total(IA)
library(CTT)
alpha(IA)
library(multilevel)
item.total(IA)
library(CTT)
alpha(IA)
reliability(IA)
itemAnalysis(IA)
itemAnalysis(IA)
reliability(IA)
library(multilevel)
item.total(IA)
library(CTT)
reliability(IA)
itemAnalysis(IA)
IA_no9 <- IA %>%
select(-c("V9"))
IA_no9 <- IA %>%
select(-c("V9"))
IA_no9 <- IA[,-2]
IA_no9 <- IA[,-2]
item.total(IA_no9)
itemAnalysis(IA)
itemAnalysis(IA_no9)
IA_no9 <- IA[,-5]
item.total(IA_no9)
itemAnalysis(IA_no9)
IA_no5 <- IA[,-5]
item.total(IA_no5)
itemAnalysis(IA_no5)
itemAnalysis(IA, itemReport = TRUE)
library(multilevel)
item.total(IA)
library(CTT)
itemAnalysis(IA, itemReport = TRUE)
library(CTT)
itemAnalysis(IA, itemReport = TRUE)
library(CTT)
itemAnalysis(IA, itemReport = TRUE)
itemReport(IA)
item_A <- itemAnalysis(IA)
item_A$itemReport
library(multilevel)
item.total(IA)
library(CTT)
item_A <- itemAnalysis(IA)
item_A$itemReport
library(psychometric)
alpha(IA)
library(psychometric)
#CTT Model
CTT_model <- item.exam(demo[,1:20], y = demo[,20], discrim=TRUE)
library(psychometric)
#CTT Model
CTT_model <- item.exam(IA[,1:20], y = IA[,20], discrim=TRUE)
head(CTT_model)
str(CTT_model)
(CTT_model)
#item difficulty
IRR <- read.spss ("data/IRR.sav", to.data.frame=TRUE)
IRR
kappa2(IRR)
View(IRR)
IRR <- read.spss ("data/interraterdemo.sav", to.data.frame=TRUE)
IRR <- read.csv ("data/interraterdemo.csv", to.data.frame=TRUE)
IRR
IRR
IRR <- read.csv ("data/interraterdemo.csv", to.data.frame=TRUE)
IRR
IRR <- read.csv ("data/interraterdemo.csv")
IRR
kappa2(IRR)
IRR_demo <- IRR %>%
select(c("DrX", "DrY"))
IRR_demo <- IRR %>%
select(c("DrX", "DrY"))
IRR_demo <- IRR %>%
select(c("DrX", "DrY"))
IRR_demo <- IRR %>%
select(c('DrX', 'DrY'))
IRR_demo <- IRR %>%
select(c('DrX', 'DrY'))
kappa2(IRR)
IRR_demo <- IRR %>%
select(1:2)
IRR_demo <- IRR[1:2]
kappa2(IRR)
View(IRR_demo)
kappa2(IRR_demo)
kappam.fleiss(IRR_demo)
kappam.fleiss(IRR)
knitr::opts_chunk$set(echo = TRUE)
install.packages("easystats")
library(easystats)
library(tidyverse)
air <- AirPassengers
